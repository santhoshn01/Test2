plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '8.1.0'
    id 'maven-publish'
    id 'com.jfrog.artifactory' version '4.26.2'
    id 'org.sonarqube' version '6.1.0.5360'
}

group = 'org.example'
version = '1.1.0.1'

application {
    // Replace with your actual main class:
    mainClass = 'org.example.YourMainClass'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

// Include tests config as before
test {
    useJUnitPlatform()
    reports {
        junitXml.required.set(true)
        junitXml.outputLocation.set(layout.buildDirectory.dir("test-results/test"))
        html.required.set(true)
        html.outputLocation.set(layout.buildDirectory.dir("reports/tests/test"))
    }
}

// Create a lean JAR containing only your classes (no dependencies)
jar {
    archiveBaseName.set("app")
    archiveVersion.set(version)
    manifest {
        attributes 'Main-Class': application.mainClass.get()
    }
    from sourceSets.main.output
}

// Create a “fat” JAR using Shadow plugin—packaging dependencies too
shadowJar {
    archiveBaseName.set("app")
    archiveVersion.set(version)
    archiveClassifier.set("all")
    manifest {
        attributes 'Main-Class': application.mainClass.get()
    }
    // Optional: merge service descriptors to avoid conflicts
    mergeServiceFiles()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

def isSnapshot = version.endsWith('-SNAPSHOT')
artifactory {
    contextUrl = 'http://192.168.100.62:8082/artifactory'
    publish {
        repository {
            repoKey = isSnapshot ? 'libs-snapshot-local' : 'libs-release-local'
            username = project.findProperty("artifactory_user") ?: "admin"
            password = project.findProperty("artifactory_password") ?: "Chella*123"
        }
        defaults {
            publications('mavenJava')
            publishArtifacts = true
            publishPom = true
        }
    }
}
